{"version":3,"file":"RefreshTokenRepository.js","sourceRoot":"","sources":["../../../src/repositories/RefreshTokenRepository.ts"],"names":[],"mappings":"","sourcesContent":["import { RefreshToken } from \"@prisma/client\";\r\nimport { BaseRepository } from \"./BaseRepository\";\r\n\r\nexport interface RefreshTokenRepository extends BaseRepository<RefreshToken, number> {\r\n  /**\r\n   * Find all valid (non-revoked) refresh tokens\r\n   * @returns A promise that resolves to an array of valid refresh tokens\r\n   */\r\n  findValidTokens(): Promise<RefreshToken[]>;\r\n\r\n  /**\r\n   * Find refresh tokens by user ID\r\n   * @param userId - The ID of the user\r\n   * @returns A promise that resolves to an array of refresh tokens for the user\r\n   */\r\n  findByUserId(userId: string): Promise<RefreshToken[]>;\r\n\r\n  /**\r\n   * Revoke a refresh token by setting its revoked timestamp\r\n   * @param id - The ID of the refresh token to revoke\r\n   * @returns A promise that resolves to the updated refresh token\r\n   */\r\n  revokeToken(id: number): Promise<RefreshToken | null>;\r\n}"]}