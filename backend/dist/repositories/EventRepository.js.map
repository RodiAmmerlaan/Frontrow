{"version":3,"file":"EventRepository.js","sourceRoot":"","sources":["../../src/repositories/EventRepository.ts"],"names":[],"mappings":"","sourcesContent":["import { Events } from \"@prisma/client\";\r\nimport { BaseRepository } from \"./BaseRepository\";\r\n\r\nexport interface EventRepository extends BaseRepository<Events, string> {\r\n  /**\r\n   * Find an event by its title\r\n   * @param title - The title of the event to find\r\n   * @returns A promise that resolves to the event or null if not found\r\n   */\r\n  findByTitle(title: string): Promise<Events | null>;\r\n\r\n  /**\r\n   * Search for events by name using a case-insensitive partial match\r\n   * @param searchTerm - The term to search for in event titles\r\n   * @returns A promise that resolves to an array of events matching the search term\r\n   */\r\n  searchByName(searchTerm: string): Promise<Events[]>;\r\n\r\n  /**\r\n   * Find all events ordered by date, filtering for future events\r\n   * @returns A promise that resolves to an array of events\r\n   */\r\n  findAllByDate(): Promise<Events[]>;\r\n\r\n  /**\r\n   * Find events within a date range\r\n   * @param startDate - The start date of the range\r\n   * @param endDate - The end date of the range\r\n   * @returns A promise that resolves to an array of events within the date range\r\n   */\r\n  findByDateRange(startDate: Date, endDate: Date): Promise<Events[]>;\r\n}"]}