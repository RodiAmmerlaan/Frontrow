{"version":3,"file":"RefreshTokenRepository.js","sourceRoot":"","sources":["../../src/repositories/RefreshTokenRepository.ts"],"names":[],"mappings":"","sourcesContent":["import { RefreshToken } from \"@prisma/client\";\nimport { BaseRepository } from \"./BaseRepository\";\n\nexport interface RefreshTokenRepository extends BaseRepository<RefreshToken, number> {\n  /**\n   * Find all valid (non-revoked) refresh tokens\n   * @returns A promise that resolves to an array of valid refresh tokens\n   */\n  findValidTokens(): Promise<RefreshToken[]>;\n\n  /**\n   * Find refresh tokens by user ID\n   * @param userId - The ID of the user\n   * @returns A promise that resolves to an array of refresh tokens for the user\n   */\n  findByUserId(userId: string): Promise<RefreshToken[]>;\n\n  /**\n   * Revoke a refresh token by setting its revoked timestamp\n   * @param id - The ID of the refresh token to revoke\n   * @returns A promise that resolves to the updated refresh token\n   */\n  revokeToken(id: number): Promise<RefreshToken | null>;\n}"]}