{"version":3,"file":"addressCheck.controller.js","sourceRoot":"","sources":["../../src/controllers/addressCheck.controller.ts"],"names":[],"mappings":";;;;;;AACA,kDAA0B;AAC1B,qDAAkD;AAelD,MAAa,sBAAuB,SAAQ,+BAAc;IACtD;;;;;;OAMG;IAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAmDG;IACI,KAAK,CAAC,YAAY,CACrB,OAAgB,EAChB,QAAkB;QAElB,IAAI,CAAC;YACD,MAAM,OAAO,GAAG,MAAM,eAAK,CAAC,GAAG,CAAU,gDAAgD,OAAO,CAAC,KAAK,CAAC,UAAU,eAAe,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;YAC7J,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;QACtG,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,uBAAuB,EAAE,GAAG,EAAE,0BAA0B,CAAC,CAAC;QAC9F,CAAC;IACL,CAAC;CACJ;AAxED,wDAwEC;AAEY,QAAA,sBAAsB,GAAG,IAAI,sBAAsB,EAAE,CAAC;AACtD,QAAA,YAAY,GAAG,8BAAsB,CAAC,YAAY,CAAC,IAAI,CAAC,8BAAsB,CAAC,CAAC","sourcesContent":["import { Request, Response } from 'express';\r\nimport axios from 'axios';\r\nimport { BaseController } from './BaseController';\r\n\r\ninterface Address {\r\n    postcode: string;\r\n    huisnummer: string;\r\n    straat: string;\r\n    buurt: string;\r\n    wijk: string;\r\n    woonplaats: string;\r\n    gemeente: string;\r\n    provincie: string;\r\n    latitude: number;\r\n    longitude: number;\r\n}\r\n\r\nexport class AddressCheckController extends BaseController {\r\n    /**\r\n     * Controller function to check address information based on postal code and house number\r\n     * Uses the openpostcode.nl API to retrieve address details\r\n     * @param request - Express request object with postalCode and houseNumber query parameters\r\n     * @param response - Express response object\r\n     * @returns Response with street and city information\r\n     */\r\n    \r\n    /**\r\n     * @openapi\r\n     * /address-check:\r\n     *   get:\r\n     *     summary: Check address information\r\n     *     description: Retrieve address details based on postal code and house number using the openpostcode.nl API\r\n     *     tags:\r\n     *       - Utilities\r\n     *     parameters:\r\n     *       - in: query\r\n     *         name: postalCode\r\n     *         required: true\r\n     *         schema:\r\n     *           type: string\r\n     *         description: The postal code to look up\r\n     *       - in: query\r\n     *         name: houseNumber\r\n     *         required: true\r\n     *         schema:\r\n     *           type: string\r\n     *         description: The house number to look up\r\n     *     responses:\r\n     *       200:\r\n     *         description: Successful response with address information\r\n     *         content:\r\n     *           application/json:\r\n     *             schema:\r\n     *               type: object\r\n     *               properties:\r\n     *                 success:\r\n     *                   type: boolean\r\n     *                 data:\r\n     *                   type: object\r\n     *                   properties:\r\n     *                     street:\r\n     *                       type: string\r\n     *                     city:\r\n     *                       type: string\r\n     *       500:\r\n     *         description: Address lookup failed\r\n     *         content:\r\n     *           application/json:\r\n     *             schema:\r\n     *               type: object\r\n     *               properties:\r\n     *                 success:\r\n     *                   type: boolean\r\n     *                 error:\r\n     *                   type: string\r\n     *                 message:\r\n     *                   type: string\r\n     */\r\n    public async addressCheck(\r\n        request: Request,\r\n        response: Response\r\n    ) {\r\n        try {\r\n            const address = await axios.get<Address>(`https://openpostcode.nl/api/address?postcode=${request.query.postalCode}&huisnummer=${request.query.houseNumber}`);\r\n            return this.sendSuccess(response, { street: address.data.straat, city: address.data.woonplaats });\r\n        } catch (error) {\r\n            return this.sendError(response, 'ADDRESS_LOOKUP_FAILED', 500, 'Failed to lookup address');\r\n        }\r\n    }\r\n}\r\n\r\nexport const addressCheckController = new AddressCheckController();\r\nexport const addressCheck = addressCheckController.addressCheck.bind(addressCheckController);"]}