{"version":3,"file":"errorHandler.middleware.js","sourceRoot":"","sources":["../../src/middleware/errorHandler.middleware.ts"],"names":[],"mappings":";;;;;AAaA,oCAyDC;AArED,yDAAqD;AACrD,0DAAmD;AACnD,6DAAqC;AAErC;;;;;;;GAOG;AACH,SAAgB,YAAY,CAC1B,KAAY,EACZ,OAAgB,EAChB,QAAkB,EAClB,IAAkB;IAElB,IAAI,CAAC,CAAC,KAAK,YAAY,0BAAW,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;QAC5D,gBAAM,CAAC,KAAK,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;IAC3C,CAAC;IAED,IAAI,KAAK,YAAY,0BAAW,EAAE,CAAC;QACjC,gBAAM,CAAC,IAAI,CAAC,iBAAiB,KAAK,CAAC,SAAS,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;QACnE,OAAO,IAAA,yBAAS,EACd,QAAQ,EACR,KAAK,CAAC,SAAS,EACf,KAAK,CAAC,UAAU,EAChB,KAAK,CAAC,OAAO,CACd,CAAC;IACJ,CAAC;IAED,IAAI,KAAK,CAAC,IAAI,KAAK,iBAAiB,EAAE,CAAC;QACrC,gBAAM,CAAC,IAAI,CAAC,qBAAqB,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;QAClD,OAAO,IAAA,yBAAS,EACd,QAAQ,EACR,kBAAkB,EAClB,GAAG,EACH,KAAK,CAAC,OAAO,CACd,CAAC;IACJ,CAAC;IAED,IAAI,KAAK,CAAC,IAAI,KAAK,aAAa,IAAK,KAAa,CAAC,MAAM,KAAK,GAAG,EAAE,CAAC;QAClE,gBAAM,CAAC,IAAI,CAAC,iBAAiB,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;QAC9C,OAAO,IAAA,yBAAS,EACd,QAAQ,EACR,cAAc,EACd,GAAG,EACH,qBAAqB,CACtB,CAAC;IACJ,CAAC;IAED,IAAI,KAAK,CAAC,IAAI,KAAK,YAAY,IAAK,KAAa,CAAC,IAAI,KAAK,KAAK,EAAE,CAAC;QACjE,gBAAM,CAAC,IAAI,CAAC,wBAAwB,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;QACrD,OAAO,IAAA,yBAAS,EACd,QAAQ,EACR,qBAAqB,EACrB,GAAG,EACH,qBAAqB,CACtB,CAAC;IACJ,CAAC;IAED,gBAAM,CAAC,KAAK,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;IAC9C,OAAO,IAAA,yBAAS,EACd,QAAQ,EACR,gBAAgB,EAChB,GAAG,EACH,8BAA8B,CAC/B,CAAC;AACJ,CAAC","sourcesContent":["import { Request, Response, NextFunction } from 'express';\r\nimport { CustomError } from '../errors/CustomErrors';\r\nimport { sendError } from '../utils/response.util';\r\nimport Logger from '../utils/logger';\r\n\r\n/**\r\n * Global error handling middleware\r\n * Catches all errors and sends standardized responses\r\n * @param error - The error object\r\n * @param request - Express request object\r\n * @param response - Express response object\r\n * @param next - Express next function\r\n */\r\nexport function errorHandler(\r\n  error: Error,\r\n  request: Request,\r\n  response: Response,\r\n  next: NextFunction\r\n) {\r\n  if (!(error instanceof CustomError) || !error.isOperational) {\r\n    Logger.error('Unexpected error:', error);\r\n  }\r\n\r\n  if (error instanceof CustomError) {\r\n    Logger.warn(`Custom error: ${error.errorCode} - ${error.message}`);\r\n    return sendError(\r\n      response,\r\n      error.errorCode,\r\n      error.statusCode,\r\n      error.message\r\n    );\r\n  }\r\n\r\n  if (error.name === 'ValidationError') {\r\n    Logger.warn(`Validation error: ${error.message}`);\r\n    return sendError(\r\n      response,\r\n      'VALIDATION_ERROR',\r\n      400,\r\n      error.message\r\n    );\r\n  }\r\n\r\n  if (error.name === 'SyntaxError' && (error as any).status === 400) {\r\n    Logger.warn(`Syntax error: ${error.message}`);\r\n    return sendError(\r\n      response,\r\n      'SYNTAX_ERROR',\r\n      400,\r\n      'Invalid JSON syntax'\r\n    );\r\n  }\r\n\r\n  if (error.name === 'MongoError' && (error as any).code === 11000) {\r\n    Logger.warn(`Duplicate key error: ${error.message}`);\r\n    return sendError(\r\n      response,\r\n      'DUPLICATE_KEY_ERROR',\r\n      409,\r\n      'Duplicate key error'\r\n    );\r\n  }\r\n\r\n  Logger.error('Internal server error:', error);\r\n  return sendError(\r\n    response,\r\n    'INTERNAL_ERROR',\r\n    500,\r\n    'An unexpected error occurred'\r\n  );\r\n}"]}