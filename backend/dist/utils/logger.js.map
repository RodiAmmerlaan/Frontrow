{"version":3,"file":"logger.js","sourceRoot":"","sources":["../../src/utils/logger.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAC9B,gDAAwB;AACxB,sCAA2C;AAE3C,MAAM,MAAM,GAAG;IACb,KAAK,EAAE,CAAC;IACR,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,CAAC;IACP,KAAK,EAAE,CAAC;CACT,CAAC;AAEF,MAAM,MAAM,GAAG;IACb,KAAK,EAAE,KAAK;IACZ,IAAI,EAAE,QAAQ;IACd,IAAI,EAAE,OAAO;IACb,IAAI,EAAE,SAAS;IACf,KAAK,EAAE,OAAO;CACf,CAAC;AAEF,iBAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAE1B,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,CAAC,OAAO,CACnC,iBAAO,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,wBAAwB,EAAE,CAAC,EAC9D,iBAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EACtC,iBAAO,CAAC,MAAM,CAAC,MAAM,CACnB,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,OAAO,EAAE,CAC7D,CACF,CAAC;AAEF,MAAM,UAAU,GAAG;IACjB,IAAI,iBAAO,CAAC,UAAU,CAAC,OAAO,EAAE;IAEhC,IAAI,iBAAO,CAAC,UAAU,CAAC,IAAI,CAAC;QAC1B,QAAQ,EAAE,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,CAAC;QAC/D,KAAK,EAAE,OAAO;KACf,CAAC;IAEF,IAAI,iBAAO,CAAC,UAAU,CAAC,IAAI,CAAC;QAC1B,QAAQ,EAAE,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,cAAc,CAAC;KACnE,CAAC;CACH,CAAC;AAEF,MAAM,MAAM,GAAG,iBAAO,CAAC,YAAY,CAAC;IAClC,KAAK,EAAE,uBAAc,CAAC,KAAK;IAC3B,MAAM;IACN,MAAM;IACN,UAAU;CACX,CAAC,CAAC;AAEH,4CAAoB;AACpB,MAAM,OAAO,GAAG,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;AACzD,IAAI,CAAC,YAAE,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC;IAC5B,YAAE,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AACxB,CAAC;AAED,kBAAe,MAAM,CAAC","sourcesContent":["import winston from 'winston';\r\nimport path from 'path';\r\nimport { LOGGING_CONFIG } from '../config';\r\n\r\nconst levels = {\r\n  error: 0,\r\n  warn: 1,\r\n  info: 2,\r\n  http: 3,\r\n  debug: 4,\r\n};\r\n\r\nconst colors = {\r\n  error: 'red',\r\n  warn: 'yellow',\r\n  info: 'green',\r\n  http: 'magenta',\r\n  debug: 'white',\r\n};\r\n\r\nwinston.addColors(colors);\r\n\r\nconst format = winston.format.combine(\r\n  winston.format.timestamp({ format: 'YYYY-MM-DD HH:mm:ss:ms' }),\r\n  winston.format.colorize({ all: true }),\r\n  winston.format.printf(\r\n    (info) => `${info.timestamp} ${info.level}: ${info.message}`,\r\n  ),\r\n);\r\n\r\nconst transports = [\r\n  new winston.transports.Console(),\r\n  \r\n  new winston.transports.File({\r\n    filename: path.join(__dirname, '..', '..', 'logs', 'error.log'),\r\n    level: 'error',\r\n  }),\r\n  \r\n  new winston.transports.File({\r\n    filename: path.join(__dirname, '..', '..', 'logs', 'combined.log'),\r\n  }),\r\n];\r\n\r\nconst Logger = winston.createLogger({\r\n  level: LOGGING_CONFIG.LEVEL,\r\n  levels,\r\n  format,\r\n  transports,\r\n});\r\n\r\nimport fs from 'fs';\r\nconst logsDir = path.join(__dirname, '..', '..', 'logs');\r\nif (!fs.existsSync(logsDir)) {\r\n  fs.mkdirSync(logsDir);\r\n}\r\n\r\nexport default Logger;"]}